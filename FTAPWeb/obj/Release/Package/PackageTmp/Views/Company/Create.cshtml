@model FTAPWeb.Company

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create","Company",FormMethod.Post,new { enctype="multipart/form-data"}))
{
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Company</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyName)
            @Html.ValidationMessageFor(model => model.CompanyName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyDescription)
            @Html.ValidationMessageFor(model => model.CompanyDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyPicture)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyPicture)
            @Html.ValidationMessageFor(model => model.CompanyPicture)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IndustryId, "Interest")
        </div>
        <div class="editor-field">
            @Html.DropDownList("IndustryId", String.Empty)
            @Html.ValidationMessageFor(model => model.IndustryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LocationId, "Location")
        </div>
        <div class="editor-field">
            @Html.DropDownList("LocationId", String.Empty)
            @Html.ValidationMessageFor(model => model.LocationId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Founded)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Founded)
            @Html.ValidationMessageFor(model => model.Founded)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyUrl)
            @Html.ValidationMessageFor(model => model.CompanyUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UpdatedOn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UpdatedOn)
            @Html.ValidationMessageFor(model => model.UpdatedOn)
        </div>
        <div class="editor-label">
            Upload Image
        </div>
        <div class="editor-field">
           <input type="file" name="file" />
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
